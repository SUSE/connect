SUSEConnect(8) - SUSE Customer Center registration tool
=======================================================

## SYNOPSIS

`SUSEConnect [<optional>...] -p PRODUCT

## DESCRIPTION

Register SUSE Linux Enterprise installations with the SUSE Customer Center.
Registration allows access to software repositories including updates
and allows online management of subscriptions and organizations.

By default, SUSEConnect registers the base SUSE Linux Enterprise product
installed on a system by querying zypper.  It can also be used to register
extensions that have been installed after system installation from physical
media.

To register extensions, use the `--product <PRODUCT-IDENTIFIER>` option together
with the product identifier of the extension, obtained with `zypper products`

Manage subscriptions at [SUSE Customer Center][scc]

## OPTIONS

  * `-p`, `--product <PRODUCT>`:
    Activate PRODUCT. Defaults to the base SUSE Linux Enterprise product
    on this system. Product identifiers can be obtained with 'zypper products'.
    Format: <name>-<version>-<architecture>

  * `-r`, `--regcode <REGCODE>`:
    Subscription registration code for the product to be registered.
    Relates that product to the specified subscription and enables software
    repositories for that product.

  * `-d`, `--de-register`:
    De-registers a system in order to not consume a subscription slot in SCC
    anymore and removes all services installed by SUSEConnect.

  * `--instance-data <path to file>`:
    Path to the XML file holding the public key and instance data
    for cloud registration with SMT`

  * `-e`, `--email <email>`:
    email address for product registration

  * `--url <URL>`:
    URL of registration server (e.g. https://scc.suse.com).

  * `--namespace <NAMESPACE>`:
    namespace option for use with SMT staging environments.

  * `-s`, `--status`:
    get current system registration status in json format.

  * `--status-text`:
    get current system registration status in text format.

  * `--write-config`:
    Write options to config file at /etc/SUSEConnect.

  * `--cleanup`:
    remove old system credentials and all zypper services installed by
    SUSEConnect.

  * `--rollback`:
    revert the registration state in case of a failed migration.

  * `--root <PATH>`:
    Path to the root folder, uses the same parameter for zypper.

  * `--version`:
    Print program version

  * `--debug`:
    Provide debug output

  * `-h`, `--help`:
    show help message

## EXIT CODES
  SUSEConnect sets the following exit codes:

  * 0:  Registration successful
  * 64: Connection refused
  * 65: Access error, eg files not readable
  * 66: Parser error: Server JSON response was not parseable
  * 67: Server responded with error: see log output

## COMPARED TO SUSE_REGISTER
### BEFORE
  `suse_register -a email=<email> -a regcode-sles=<regcode> -L <logfile>`
### AFTER
  `SUSEConnect --url <registration-server-url> -r <regcode> >> <logfile>`

## USE WITH SMT
  SUSEConnect can also be used to register systems with a local SUSE
  Subscription Management Tool, instead of the SUSE Customer Center.
  Use `SUSEConnect --url <smt-server-url>` to register systems with SMT and set
  [proxies][ENVIRONMENT] as required.

## IMPLEMENTATION
  SUSEConnect is implemented in Ruby 2.0.  It communicates with the registration
  server using a RESTful JSON API over HTTP using TLS encryption.

## ENVIRONMENT

  * `HTTP_PROXY` and `HTTPS_PROXY` environment variables are respected

  * `LANG` environment variable overrides according config option

  * `POST_REGISTER_SCRIPTS_PATH` overrides default post-registration callback scripts directory



## FILES
  * `/etc/SUSEConnect`:
    Configuration file containing server URL, regcode and language for
    registration

## AUTHOR
  SUSE Linux Products GmbH <scc-feedback@suse.de>

## LINKS
[SUSE Customer Center][scc]

[SUSEConnect on GitHub][scc-github]

## SEE ALSO

SUSEConnect(5)
